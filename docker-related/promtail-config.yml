server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: docker-nginx-logs
    # Docker 데몬에서 로그를 직접 가져오는 설정입니다.
    # docker_sd_configs는 리스트 형태여야 합니다.
    docker_sd_configs:
      # 이 하이픈(-)이 리스트의 첫 번째 항목을 나타냅니다.
      - host: unix:///var/run/docker.sock # Docker 소켓 경로 (환경에 맞게 수정)

    # 어떤 컨테이너의 로그를 가져올지 필터링하고 레이블을 추가합니다.
    relabel_configs:
      # ... (이전과 동일) ...
      - source_labels: ['__meta_docker_container_name']
        regex: '/nginx_ab_router'
        action: keep
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: container_name
        replacement: '$1'
      - source_labels: ['__meta_docker_image']
        target_label: image_name
      - source_labels: ['__meta_docker_container_id']
        target_label: container_id
        regex: '(.{12}).*'

    # 로그 라인을 파싱하고 레이블을 추출하는 파이프라인
    pipeline_stages:
      # ... (이전과 동일) ...
      - grok:
          pattern: '%{IPORHOST:remote_addr} - %{WORD:remote_user} \[%{HTTPDATE:time_local}\] \"(?:%{WORD:method})? %{NOTSPACE:request}(?: HTTP/%{NUMBER:http_version})?\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:http_user_agent}\" \"%{DATA:http_x_forwarded_for}\" \"%{DATA:ab_version}\"'
      - labels:
          status:
          ab_version:
