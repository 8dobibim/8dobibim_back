# --- 네임스페이스 설정 ---
namespace = "my-llm-staging" # 개발 환경이 아닌 경우 변경

# --- Docker 이미지 버전 설정 ---
litellm_image      = "ghcr.io/berriai/litellm:main-latest"
openwebui_image_v1 = "ghcr.io/open-webui/open-webui:v0.6.7"
openwebui_image_v2 = "ghcr.io/open-webui/open-webui:v0.6.6"
prometheus_image   = "prom/prometheus:v2.47.1"
postgres_image     = "postgres:13"

# --- 애플리케이션 포트 설정 ---
litellm_api_port    = 4000
litellm_metrics_port = 9000
openwebui_port      = 8080
prometheus_port     = 9090
postgres_port       = 5432

# --- 민감한 환경 변수 및 자격 증명 (매우 중요: 실제 값으로 대체) ---
# 이 값들은 절대로 Git 저장소에 직접 커밋해서는 안 됩니다!
# 대신 `terraform apply -var="VAR_NAME=VALUE"` 또는 CI/CD 파이프라인의 시크릿 관리 기능을 사용하세요.
# LiteLLM 인증을 위한 마스터 키 (반드시 변경)
LITELLM_MASTER_KEY  = "YOUR_ACTUAL_LITELLM_MASTER_KEY"
# LiteLLM 인증을 위한 SALT 키 (반드시 변경)
LITELLM_SALT_KEY    = "YOUR_ACTUAL_LITELLM_SALT_KEY"
# Google Gemini API 키 (반드시 변경)
GEMINI_API_KEY      = "YOUR_ACTUAL_GEMINI_API_KEY"
# Azure OpenAI API 키 (반드시 변경)
AZURE_API_KEY       = "YOUR_ACTUAL_AZURE_API_KEY"
# Azure OpenAI API Base URL (예: https://YOUR_RESOURCE_[NAME.openai.azure.com/](https://NAME.openai.azure.com/))
AZURE_API_BASE      = "[https://your-azure-resource.openai.azure.com/](https://your-azure-resource.openai.azure.com/)"
# Azure OpenAI API 버전
AZURE_API_VERSION   = "2023-07-01-preview"

# PostgreSQL 데이터베이스 사용자명 (반드시 변경)
postgres_user = "your_actual_postgres_user"
# PostgreSQL 데이터베이스 비밀번호 (반드시 변경)
postgres_password = "your_actual_postgres_password"
# PostgreSQL 데이터베이스 이름 (반드시 변경)
postgres_db = "your_actual_postgres_db_name"
# PostgreSQL 데이터베이스 URL (예: postgresql://user:password@host:port/db)
DATABASE_URL = "postgresql://your_actual_postgres_user:your_actual_postgres_password@postgres-service:5432/your_actual_postgres_db_name"

# --- AWS 리전 및 프로젝트 설정 ---
# AWS 리소스가 배포될 리전 (예: ap-northeast-2는 서울)
aws_region   = "ap-northeast-2"
# 프로젝트 이름 (리소스 태그 및 명명에 사용)
project_name = "llm-project"
# 모든 AWS 리소스에 적용할 기본 태그
aws_tags = {
  Project     = "LLM Inhouse"
  Environment = "Dev" # 배포 환경에 따라 변경 (Dev, Staging, Prod 등)
  ManagedBy   = "Terraform"
}

# --- VPC 네트워크 설정 ---
vpc_cidr             = "10.0.0.0/16"
public_subnets_cidr  = ["10.0.1.0/24", "10.0.2.0/24"]
private_subnets_cidr = ["10.0.101.0/24", "10.0.102.0/24"]

# --- EKS 클러스터 설정 ---
eks_cluster_version          = "1.28"
eks_node_group_instance_type = "t3.medium"
eks_node_group_desired_size  = 2
eks_node_group_max_size      = 3
eks_node_group_min_size      = 1

# --- OpenWebUI A/B 테스트 트래픽 분배 설정 ---
openwebui_v1_weight = 70 # v1에 70% 트래픽
openwebui_v2_weight = 30 # v2에 30% 트래픽
# 참고: v1_weight + v2_weight는 일반적으로 100이 되어야 합니다.
